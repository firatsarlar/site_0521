const mappings = {
    "3": "Ξξ",
    "8": "Θθ",
    "A": "ÀÁÂÃÄÅĀĂĄΆΑАẠẢẤẦẨẪẬẮẰẲẴẶ",
    "AE": "ÆӘ",
    "C": "ÇĆČЋЦ",
    "E": "ÈÉÊËĒĖĚƏΈΕЕЭẸẺẼẾỀỂỄỆ",
    "I": "ÌÍÎÏĨĮİΊΙΪІИỈỊ",
    "D": "ÐĎΔД",
    "N": "ÑŃŅŇΝН",
    "O": "ÒÓÔÕÖØŌŐƠΌΟОỌỎỐỒỔỖỘỚỜỞỠỢ",
    "U": "ÙÚÛÜŨŮŰŲƯУЪҰỤỦỨỪỬỮỰ",
    "Y": "ÝŶŸΎΥΫЫỲỴỶỸ",
    "TH": "Þ",
    "ss": "ß",
    "a": "àáâãäåāăąάαаაạảấầẩẫậắằẳẵặ",
    "ae": "æә",
    "c": "çćčцћ",
    "e": "èéêëēėĘęěəέεеэეẹẻẽếềểễệ",
    "i": "ìíîïĩĪīįıΐίιϊиіიỉị",
    "d": "ðďδдდ",
    "n": "ñńņňνнნ",
    "o": "òóôõöøōőơ˚οόоოọỏốồổỗộớờởỡợ",
    "u": "ùúûüũŪūůűųưуъѝұუụủứừửữự",
    "y": "ýÿŷΰυϋύыỳỵỷỹ",
    "th": "þ",
    "DJ": "ĐЂ",
    "dj": "đђ",
    "G": "ĞĢΓГҐ",
    "g": "ğģγгґგ",
    "k": "Ķķκкკქ",
    "L": "ĻĽŁΛЛ",
    "l": "ļľłλлლ",
    "OE": "ŒӨ",
    "oe": "œө",
    "R": "ŔŘΡР",
    "r": "ŕřρрრ",
    "S": "ŚŞŠȘΣС",
    "s": "śşšșςσсს",
    "T": "ŢŤȚΤТ",
    "t": "ţťțτтთტ",
    "W": "ŴΏΩẀẂẄ",
    "w": "ŵωώẁẃẅ",
    "Z": "ŹŻŽΖЗ",
    "z": "źżžζзზ",
    "f": "ƒφфფ",
    "LJ": "ǈЉ",
    "lj": "ǉљ",
    "NJ": "ǋЊ",
    "nj": "ǌњ",
    "H": "ΉΗХҺ",
    "B": "ΒБ",
    "K": "ΚК",
    "M": "ΜМ",
    "P": "ΠП",
    "F": "ΦФ",
    "X": "Χ",
    "PS": "Ψ",
    "h": "ήηхһჰ",
    "b": "βбბ",
    "m": "μмმ",
    "p": "πпპ",
    "x": "χ",
    "ps": "ψ",
    "Yo": "Ё",
    "Ye": "Є",
    "Yi": "Ї",
    "J": "ЈЙ",
    "DZ": "Џ",
    "V": "В",
    "Zh": "Ж",
    "Ch": "Ч",
    "Sh": "ШЩ",
    "": "Ьь",
    "Yu": "Ю",
    "Ya": "Я",
    "v": "вვ",
    "zh": "жჟ",
    "j": "йјჯ",
    "ch": "чჩჭ",
    "sh": "шщშ",
    "yu": "ю",
    "ya": "я",
    "yo": "ё",
    "ye": "є",
    "yi": "ї",
    "dz": "џძ",
    "GH": "Ғ",
    "gh": "ғღ",
    "KH": "Қ",
    "kh": "қხ",
    "NG": "Ң",
    "ng": "ң",
    "UE": "Ү",
    "ue": "ү",
    "baht": "฿",
    "q": "ყ",
    "ts": "ცწ",
    "SS": "ẞ",
    "_": " &/!'^+%&()=?"
};
const skipList = "0123456789ABCDEFGHIJKLMNOPRSTUVWXYZ_abcdefghijklmnopqrstuvwxyz";
function replace(str) {
    // let processed = 0;
    let ret = "";
    str.split('').forEach(k => {
        if (skipList.indexOf(k) < 0) {
            // processed++;
            let i = Object.values(mappings).findIndex(el => el.indexOf(k) > -1);
            if (i > -1) {
                k = Object.keys(mappings)[i]
            }
        }
        ret += k;
    });
    // console.log(processed);
    return ret;
}
